{"version":3,"sources":["components/Loader/Loader.tsx","components/PersonModal/PersonModal.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Loader","className","PersonModal","person","selectedPersonSlug","people","slug","sex","name","died","born","motherName","fatherName","motherLink","motherPerson","find","p","to","fatherLink","fatherPerson","tableRowClasses","classNames","linkClasses","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","loadingError","setLoadingError","useParams","useEffect","fetchPeople","peopleData","content","length","map","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"wSAEaA,EAAS,kBACpB,qBAAKC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECQTC,EAA+B,SAAC,GAItC,IAHLC,EAGI,EAHJA,OACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,OAGEC,EACEH,EADFG,KAAMC,EACJJ,EADII,IAAKC,EACTL,EADSK,KAAMC,EACfN,EADeM,KAAMC,EACrBP,EADqBO,KAAMC,EAC3BR,EAD2BQ,WAAYC,EACvCT,EADuCS,WAGvCC,EAAa,KAEjB,GAAIF,EAAY,CACd,IAAMG,EAAeT,EAAOU,MAAK,SAACC,GAAD,OAAOA,EAAER,OAASG,CAAlB,IAG/BE,EADEC,EAEA,cAAC,IAAD,CACEG,GAAE,kBAAaH,EAAaR,MAC5BL,UAAU,kBAFZ,SAIGU,IAIQA,CAEhB,MACCE,EAAa,IAGf,IAAIK,EAAa,KAEjB,GAAIN,EAAY,CACd,IAAMO,EAAed,EAAOU,MAAK,SAACC,GAAD,OAAOA,EAAER,OAASI,CAAlB,IAG/BM,EADEC,EAEA,cAAC,IAAD,CAAMF,GAAE,kBAAaE,EAAab,MAAlC,SAA2CM,IAGhCA,CAEhB,MACCM,EAAa,IAGf,IAAME,EAAkBC,IAAW,CACjC,yBAA0BjB,IAAuBE,IAG7CgB,EAAcD,IAAW,CAC7B,kBAA2B,MAARd,IAGrB,OACE,qBAAI,UAAQ,SAASN,UAAWmB,EAAhC,UACE,6BACE,cAAC,IAAD,CAAMH,GAAE,kBAAaX,GAAQL,UAAWqB,EAAxC,SACGd,MAIL,6BAAKD,IACL,6BAAKG,IACL,6BAAKD,IACL,6BAAKI,IACL,6BAAKK,MAGV,ECtEM,SAASK,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,CCPM,IAAMQ,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAO5B,EAAP,KAAe6B,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAwCH,oBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KACA,EAAsBC,cAAdjC,YAAR,MAAe,GAAf,EAEAkC,qBAAU,WACR,IAAMC,EAAW,iDAAG,8GAEhBL,GAAa,GAFG,SAISb,IAJT,OAIVmB,EAJU,OAMhBR,EAAUQ,GANM,gDAQhBJ,GAAgB,GARA,yBAUhBF,GAAa,GAVG,4EAAH,qDAcjBK,GACD,GAAE,IAEH,IAAIE,EAAU,KA6Cd,OA1CEA,EADER,EACQ,cAAC,EAAD,IACDE,EAEP,mBAAG,UAAQ,qBAAqBpC,UAAU,kBAA1C,kCAIQI,EAAOuC,OAMf,wBACE,UAAQ,cACR3C,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGI,EAAOwC,KAAI,SAAC1C,GAAD,OACV,cAAC,EAAD,CACEA,OAAQA,EAERC,mBAAoBE,EACpBD,OAAQA,GAFHF,EAAOG,KAHJ,SApBhB,mBAAG,UAAQ,kBAAX,+CAkCF,qCACE,oBAAIL,UAAU,QAAd,yBACA,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,sBAAf,SAAsC0C,QAI7C,EC7EYG,EAAM,WACjB,OACE,sBAAK,UAAQ,MAAb,UACE,qBACE,UAAQ,MACR7C,UAAU,iCACV8C,KAAK,aACL,aAAW,kBAJb,SAME,qBAAK9C,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEgB,GAAG,IACHhB,UAAW,gBAAG+C,EAAH,EAAGA,SAAH,OAAkB3B,IAAW,cAAe,CACrD,8BAA+B2B,GADtB,EAFb,kBASA,cAAC,IAAD,CACE/B,GAAG,UACHhB,UAAW,gBAAG+C,EAAH,EAAGA,SAAH,OAAkB3B,IAAW,cAAe,CACrD,8BAA+B2B,GADtB,EAFb,2BAYN,sBAAM/C,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUjC,GAAG,IAAIkC,SAAO,MAEpD,cAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,oBAAIjD,UAAU,QAAd,yBAEzB,eAAC,IAAD,CAAOgD,KAAK,SAASC,QAAS,cAAC,EAAD,IAA9B,UACE,cAAC,IAAD,CAAOE,OAAK,EAACF,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,SAG/B,cAAC,IAAD,CACED,KAAK,IACLC,QAAS,oBAAIjD,UAAU,QAAd,uCAOtB,ECpDDoD,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.a3158b78.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ninterface Props {\n  person: Person;\n  selectedPersonSlug: string;\n  people: Person[];\n}\n\nexport const PersonModal: React.FC<Props> = ({\n  person,\n  selectedPersonSlug,\n  people,\n}) => {\n  const {\n    slug, sex, name, died, born, motherName, fatherName,\n  } = person;\n\n  let motherLink = null;\n\n  if (motherName) {\n    const motherPerson = people.find((p) => p.name === motherName);\n\n    if (motherPerson) {\n      motherLink = (\n        <Link\n          to={`/people/${motherPerson.slug}`}\n          className=\"has-text-danger\"\n        >\n          {motherName}\n        </Link>\n      );\n    } else {\n      motherLink = motherName;\n    }\n  } else {\n    motherLink = '-';\n  }\n\n  let fatherLink = null;\n\n  if (fatherName) {\n    const fatherPerson = people.find((p) => p.name === fatherName);\n\n    if (fatherPerson) {\n      fatherLink = (\n        <Link to={`/people/${fatherPerson.slug}`}>{fatherName}</Link>\n      );\n    } else {\n      fatherLink = fatherName;\n    }\n  } else {\n    fatherLink = '-';\n  }\n\n  const tableRowClasses = classNames({\n    'has-background-warning': selectedPersonSlug === slug,\n  });\n\n  const linkClasses = classNames({\n    'has-text-danger': sex === 'f',\n  });\n\n  return (\n    <tr data-cy=\"person\" className={tableRowClasses}>\n      <td>\n        <Link to={`/people/${slug}`} className={linkClasses}>\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{motherLink}</td>\n      <td>{fatherLink}</td>\n    </tr>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types/Person';\nimport { PersonModal } from '../PersonModal/PersonModal';\nimport { getPeople } from '../../api';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingError, setLoadingError] = useState(false);\n  const { slug = '' } = useParams();\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      try {\n        setIsLoading(true);\n\n        const peopleData = await getPeople();\n\n        setPeople(peopleData);\n      } catch {\n        setLoadingError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPeople();\n  }, []);\n\n  let content = null;\n\n  if (isLoading) {\n    content = <Loader />;\n  } else if (loadingError) {\n    content = (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  } else if (!people.length) {\n    content = (\n      <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n    );\n  } else {\n    content = (\n      <table\n        data-cy=\"peopleTable\"\n        className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n      >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map((person) => (\n            <PersonModal\n              person={person}\n              key={person.slug}\n              selectedPersonSlug={slug}\n              people={people}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">{content}</div>\n      </div>\n    </>\n  );\n};\n","import './App.scss';\nimport {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/people\"\n              className={({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n\n            <Route path=\"people\" element={<PeoplePage />}>\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}